/**
 * A <code>ShapeHolder</code> class 
 * @author JosephSalerno
 * @author BrendanOlski
 * @author MitchellThomas
 * Class: ShapeHolder.java
 * Project: 4
 */

package shapes;

public class ShapeHolder {

    private static ShapeHolder instance;
    
    public static ShapeHolder getInstance(){
       if (instance == null) {
         instance = new ShapeHolder();
       }
       return instance
    }
}



public class ShapeHolderIterator implements Iterable<GeometricShape>{
    
   int current;
   ShapeHolderIterator data;
     
   // initialize pointer to head of the list for iteration 
   public IntContainerIter(IntContainer data) { 
       this.data = data;
       current = 0;
   }
    
    // Checks if the next element exists 
   public boolean hasNext() {
      return current < data.size();
   }
     
   // moves the cursor/iterator to next element 
   public int next() {
      return data.getInt(current++);
   }

}  
